<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Clicking the + More option]]>
    </line>
    <line>
      <![CDATA[Clicking the Monument tab]]>
    </line>
    <line>
      <![CDATA[Checking the top monument section]]>
    </line>
    <line>
      <![CDATA[Clicking the + More option]]>
    </line>
    <line>
      <![CDATA[Clicking the Monument tab]]>
    </line>
    <line>
      <![CDATA[Checking the top monument section]]>
    </line>
  </reporter-output>
  <suite started-at="2020-12-15T16:13:42 IST" name="Suite" finished-at="2020-12-15T16:15:26 IST" duration-ms="103220">
    <groups>
    </groups>
    <test started-at="2020-12-15T16:13:42 IST" name="ChromeTest" finished-at="2020-12-15T16:14:25 IST" duration-ms="42296">
      <class name="com.atmecs.yatra.testscript.YatraCruiseTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@657c8ad9]" started-at="2020-12-15T16:13:42 IST" name="beforeMethod" finished-at="2020-12-15T16:13:52 IST" duration-ms="9198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@657c8ad9]" started-at="2020-12-15T16:13:52 IST" name="cruiseTest" finished-at="2020-12-15T16:14:01 IST" duration-ms="9230" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span class="multiselect__placeholder">...</span> is not clickable at point (264, 189). Other element would receive the click: <div class="multiselect_input_wrapper">...</div>
  (Session info: chrome=87.0.4280.88)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\ALFIN~1.ANT\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:61900}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 5f67c4667cb7f3a3dfdfd3fbd5c10e63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span class="multiselect__placeholder">...</span> is not clickable at point (264, 189). Other element would receive the click: <div class="multiselect_input_wrapper">...</div>
  (Session info: chrome=87.0.4280.88)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\ALFIN~1.ANT\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:61900}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 5f67c4667cb7f3a3dfdfd3fbd5c10e63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.atmecs.yatra.methods.YatraCruiseMethods.selectValue(YatraCruiseMethods.java:35)
at com.atmecs.yatra.page.YatraCruisePage.cruisePage(YatraCruisePage.java:43)
at com.atmecs.yatra.testscript.YatraCruiseTest.cruiseTest(YatraCruiseTest.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@657c8ad9]" started-at="2020-12-15T16:14:05 IST" name="afterMethod" finished-at="2020-12-15T16:14:09 IST" duration-ms="4356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.atmecs.yatra.testscript.YatraCruiseTest -->
      <class name="com.atmecs.yatra.testscript.YatraMonumentsTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@436a4e4b]" started-at="2020-12-15T16:14:09 IST" name="beforeMethod" finished-at="2020-12-15T16:14:22 IST" duration-ms="12514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="yatraMonuments()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@436a4e4b]" started-at="2020-12-15T16:14:22 IST" name="yatraMonuments" finished-at="2020-12-15T16:14:23 IST" duration-ms="850" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Clicking the + More option]]>
            </line>
            <line>
              <![CDATA[Clicking the Monument tab]]>
            </line>
            <line>
              <![CDATA[Checking the top monument section]]>
            </line>
          </reporter-output>
        </test-method> <!-- yatraMonuments -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@436a4e4b]" started-at="2020-12-15T16:14:23 IST" name="afterMethod" finished-at="2020-12-15T16:14:25 IST" duration-ms="1910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.atmecs.yatra.testscript.YatraMonumentsTest -->
    </test> <!-- ChromeTest -->
    <test started-at="2020-12-15T16:13:42 IST" name="FirefoxTest" finished-at="2020-12-15T16:15:26 IST" duration-ms="103220">
      <class name="com.atmecs.yatra.testscript.YatraCruiseTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa3cd93]" started-at="2020-12-15T16:13:42 IST" name="beforeMethod" finished-at="2020-12-15T16:14:13 IST" duration-ms="30684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa3cd93]" started-at="2020-12-15T16:14:13 IST" name="cruiseTest" finished-at="2020-12-15T16:15:00 IST" duration-ms="46516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa3cd93]" started-at="2020-12-15T16:15:00 IST" name="afterMethod" finished-at="2020-12-15T16:15:04 IST" duration-ms="4120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.atmecs.yatra.testscript.YatraCruiseTest -->
      <class name="com.atmecs.yatra.testscript.YatraMonumentsTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@7ea37dbf]" started-at="2020-12-15T16:15:04 IST" name="beforeMethod" finished-at="2020-12-15T16:15:15 IST" duration-ms="11741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="yatraMonuments()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@7ea37dbf]" started-at="2020-12-15T16:15:15 IST" name="yatraMonuments" finished-at="2020-12-15T16:15:16 IST" duration-ms="910" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Clicking the + More option]]>
            </line>
            <line>
              <![CDATA[Clicking the Monument tab]]>
            </line>
            <line>
              <![CDATA[Checking the top monument section]]>
            </line>
          </reporter-output>
        </test-method> <!-- yatraMonuments -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@7ea37dbf]" started-at="2020-12-15T16:15:16 IST" name="afterMethod" finished-at="2020-12-15T16:15:26 IST" duration-ms="9212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.atmecs.yatra.testscript.YatraMonumentsTest -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- Suite -->
</testng-results>
