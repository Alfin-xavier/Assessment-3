<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="14" passed="9" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-14T18:18:11 IST" name="Suite" finished-at="2020-12-14T18:21:06 IST" duration-ms="175303">
    <groups>
    </groups>
    <test started-at="2020-12-14T18:18:11 IST" name="FirefoxTest" finished-at="2020-12-14T18:20:56 IST" duration-ms="165122">
      <class name="com.atmecs.yatra.testscript.YatraCruiseTest">
        <test-method is-config="true" signature="initBrowser()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:18:11 IST" name="initBrowser" finished-at="2020-12-14T18:18:15 IST" duration-ms="4123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBrowser -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:18:15 IST" name="beforeMethod" finished-at="2020-12-14T18:18:29 IST" duration-ms="13097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:18:29 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:18:34 IST" duration-ms="5706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Australia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[03-Jan-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7 To 9 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Carnival Cruise Lines]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:18:34 IST" name="afterTest" finished-at="2020-12-14T18:18:38 IST" duration-ms="4164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:18:38 IST" name="beforeMethod" finished-at="2020-12-14T18:18:55 IST" duration-ms="16513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:18:55 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:18:55 IST" duration-ms="412" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Australasia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[06-Oct-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1 To 3 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Princess]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <a id="booking_engine_cruise" class="relative" href="cruise"> could not be scrolled into view
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 83.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20201112153044, moz:geckodriverVersion: 0.28.0, moz:headless: false, moz:processID: 18716, moz:profile: C:\Users\alfin.anthonyraj\A..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 50ee0810-8cbc-4f4d-b68b-a653442e826c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <a id="booking_engine_cruise" class="relative" href="cruise"> could not be scrolled into view
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 83.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20201112153044, moz:geckodriverVersion: 0.28.0, moz:headless: false, moz:processID: 18716, moz:profile: C:\Users\alfin.anthonyraj\A..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 50ee0810-8cbc-4f4d-b68b-a653442e826c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.atmecs.yatra.methods.YatraCruiseMethods.clickCruiseTab(YatraCruiseMethods.java:29)
at com.atmecs.yatra.page.YatraCruisePage.cruisePage(YatraCruisePage.java:41)
at com.atmecs.yatra.testscript.YatraCruiseTest.cruiseTest(YatraCruiseTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:18:56 IST" name="afterTest" finished-at="2020-12-14T18:19:02 IST" duration-ms="5724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:19:02 IST" name="beforeMethod" finished-at="2020-12-14T18:19:20 IST" duration-ms="18134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:19:20 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:19:20 IST" duration-ms="76" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Carribean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[04-Nov-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7 To 9 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[MSC Cruises]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[Element <li class="list-more-tab"> is not clickable at point (730,59) because another element <iframe id="webklipper-publisher-widget-container-notification-frame" name="notification-frame-~55870753"> obscures it
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 83.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20201112153044, moz:geckodriverVersion: 0.28.0, moz:headless: false, moz:processID: 22960, moz:profile: C:\Users\alfin.anthonyraj\A..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 58bbd203-e56d-4ca5-bcdb-f400de0bae73]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: Element <li class="list-more-tab"> is not clickable at point (730,59) because another element <iframe id="webklipper-publisher-widget-container-notification-frame" name="notification-frame-~55870753"> obscures it
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 83.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20201112153044, moz:geckodriverVersion: 0.28.0, moz:headless: false, moz:processID: 22960, moz:profile: C:\Users\alfin.anthonyraj\A..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 58bbd203-e56d-4ca5-bcdb-f400de0bae73
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.atmecs.yatra.methods.YatraCruiseMethods.clickMoreLink(YatraCruiseMethods.java:24)
at com.atmecs.yatra.page.YatraCruisePage.cruisePage(YatraCruisePage.java:37)
at com.atmecs.yatra.testscript.YatraCruiseTest.cruiseTest(YatraCruiseTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:19:21 IST" name="afterTest" finished-at="2020-12-14T18:19:30 IST" duration-ms="9436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:19:30 IST" name="beforeMethod" finished-at="2020-12-14T18:19:48 IST" duration-ms="17874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:19:48 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:19:55 IST" duration-ms="6619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pacific Coastal ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01-Jan-2022]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1 To 3 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Princess]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:19:55 IST" name="afterTest" finished-at="2020-12-14T18:20:01 IST" duration-ms="6422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:20:01 IST" name="beforeMethod" finished-at="2020-12-14T18:20:19 IST" duration-ms="17413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:20:19 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:20:25 IST" duration-ms="6008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Carribean Eastern]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01-Mar-2022]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14 and more night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Holland America]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@78dd667e]" started-at="2020-12-14T18:20:25 IST" name="afterTest" finished-at="2020-12-14T18:20:31 IST" duration-ms="6673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.atmecs.yatra.testscript.YatraCruiseTest -->
      <class name="com.atmecs.yatra.testscript.YatraMonumentsTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@10db82ae]" started-at="2020-12-14T18:20:31 IST" name="beforeMethod" finished-at="2020-12-14T18:20:47 IST" duration-ms="15934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="yatraMonuments()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@10db82ae]" started-at="2020-12-14T18:20:47 IST" name="yatraMonuments" finished-at="2020-12-14T18:20:48 IST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- yatraMonuments -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@10db82ae]" started-at="2020-12-14T18:20:48 IST" name="afterTest" finished-at="2020-12-14T18:20:56 IST" duration-ms="7425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.atmecs.yatra.testscript.YatraMonumentsTest -->
    </test> <!-- FirefoxTest -->
    <test started-at="2020-12-14T18:18:11 IST" name="ChromeTest" finished-at="2020-12-14T18:21:06 IST" duration-ms="175303">
      <class name="com.atmecs.yatra.testscript.YatraCruiseTest">
        <test-method is-config="true" signature="initBrowser()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:11 IST" name="initBrowser" finished-at="2020-12-14T18:18:15 IST" duration-ms="4017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBrowser -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:15 IST" name="beforeMethod" finished-at="2020-12-14T18:18:26 IST" duration-ms="10331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:26 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:18:31 IST" duration-ms="5126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Australia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[03-Jan-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7 To 9 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Carnival Cruise Lines]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:31 IST" name="afterTest" finished-at="2020-12-14T18:18:31 IST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:31 IST" name="beforeMethod" finished-at="2020-12-14T18:18:44 IST" duration-ms="12814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:44 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:18:49 IST" duration-ms="5001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Australasia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[06-Oct-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1 To 3 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Princess]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:49 IST" name="afterTest" finished-at="2020-12-14T18:18:51 IST" duration-ms="1761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:18:51 IST" name="beforeMethod" finished-at="2020-12-14T18:19:02 IST" duration-ms="11625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:19:02 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:19:08 IST" duration-ms="5551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Carribean]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[04-Nov-2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7 To 9 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[MSC Cruises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:19:08 IST" name="afterTest" finished-at="2020-12-14T18:19:12 IST" duration-ms="4295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:19:12 IST" name="beforeMethod" finished-at="2020-12-14T18:19:24 IST" duration-ms="11767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:19:24 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:19:33 IST" duration-ms="8845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pacific Coastal ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01-Jan-2022]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1 To 3 night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Princess]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:19:33 IST" name="afterTest" finished-at="2020-12-14T18:19:38 IST" duration-ms="5428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:19:38 IST" name="beforeMethod" finished-at="2020-12-14T18:19:55 IST" duration-ms="17100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cruiseTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:19:55 IST" name="cruiseTest" data-provider="testData" finished-at="2020-12-14T18:20:00 IST" duration-ms="4196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Carribean Eastern]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01-Mar-2022]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14 and more night(s)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Holland America]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cruiseTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraCruiseTest@2aa5fe93]" started-at="2020-12-14T18:20:00 IST" name="afterTest" finished-at="2020-12-14T18:20:02 IST" duration-ms="2452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.atmecs.yatra.testscript.YatraCruiseTest -->
      <class name="com.atmecs.yatra.testscript.YatraMonumentsTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@5c1a8622]" started-at="2020-12-14T18:20:02 IST" name="beforeMethod" finished-at="2020-12-14T18:20:22 IST" duration-ms="19893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="yatraMonuments()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@5c1a8622]" started-at="2020-12-14T18:20:22 IST" name="yatraMonuments" finished-at="2020-12-14T18:20:24 IST" duration-ms="2203" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=87.0.4280.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\ALFIN~1.ANT\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:54472}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 435af4afe967591566811d7dfb283bda]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=87.0.4280.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ATMECSINLT-601', ip: '192.168.163.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\ALFIN~1.ANT\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:54472}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 435af4afe967591566811d7dfb283bda
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:156)
at com.atmecs.yatra.methods.YatraMonumentsMethods.sectionDisplayed(YatraMonumentsMethods.java:51)
at com.atmecs.yatra.page.YatraMonumentsPage.monumentsPage(YatraMonumentsPage.java:44)
at com.atmecs.yatra.testscript.YatraMonumentsTest.yatraMonuments(YatraMonumentsTest.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- yatraMonuments -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.atmecs.yatra.testscript.YatraMonumentsTest@5c1a8622]" started-at="2020-12-14T18:20:57 IST" name="afterTest" finished-at="2020-12-14T18:21:06 IST" duration-ms="9017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.atmecs.yatra.testscript.YatraMonumentsTest -->
    </test> <!-- ChromeTest -->
  </suite> <!-- Suite -->
</testng-results>
